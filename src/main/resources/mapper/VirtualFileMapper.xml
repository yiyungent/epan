<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stu.yun.dao.VirtualFileDao">

    <resultMap id="virtualFileMap" type="VirtualFile">
        <id property="id" column="id"/>
        <result property="parentId" column="parentId"/>
        <result property="fileType" column="fileType"/>
        <result property="fileName" column="fileName"/>
        <result property="createTime" column="createTime"/>
        <result property="userInfoId" column="userInfoId"/>
        <result property="realFileId" column="realFileId"/>
        <association property="userInfo" javaType="UserInfo">
            <id property="id" column="userInfoId"/>
            <result property="userName" column="userName"/>
            <result property="password" column="password"/>
            <result property="diskSize" column="diskSize"/>
            <result property="usedDiskSize" column="usedDiskSize"/>
        </association>
        <association property="realFile" javaType="RealFile">
            <id property="id" column="realFileId"/>
            <result property="signKey" column="signKey"/>
            <result property="sourceType" column="sourceType"/>
            <result property="filePath" column="filePath"/>
            <result property="fileSize" column="fileSize"/>
        </association>
    </resultMap>

    <select id="userList" resultMap="virtualFileMap">
        select
            v.id, v.parentId, v.fileType, v.fileName, v.userInfoId, v.realFileId, v.createTime,
            u.userName, u.password, u.diskSize, u.usedDiskSize,
            r.signKey, r.sourceType, r.filePath, r.fileSize
        from
            virtualFile as v
        left join
            userInfo as u
            on v.userInfoId = u.id
        left join
            realFile as r
            on v.realFileId = r.id
        where
            userInfoId = #{userId} and parentId = #{fileParentId}
    </select>

    <select id="queryById" resultMap="virtualFileMap">
        select
            v.id, v.parentId, v.fileType, v.fileName, v.userInfoId, v.realFileId, v.createTime,
            u.userName, u.password, u.diskSize, u.usedDiskSize,
            r.signKey, r.sourceType, r.filePath, r.fileSize
        from
            virtualFile as v
        left join
            userInfo as u
            on v.userInfoId = u.id
        left join
            realFile as r
            on v.realFileId = r.id
        where
            v.id = #{id}
    </select>

    <select id="queryByParentId" resultMap="virtualFileMap">
        select
            v.id, v.parentId, v.fileType, v.fileName, v.userInfoId, v.realFileId, v.createTime,
            u.userName, u.password, u.diskSize, u.usedDiskSize,
            r.signKey, r.sourceType, r.filePath, r.fileSize
        from
            virtualFile as v
        left join
            userInfo as u
            on v.userInfoId = u.id
        left join
            realFile as r
            on v.realFileId = r.id
        where
            v.parentId = #{parentId}
    </select>

    <select id="queryByPath" resultMap="virtualFileMap">
        select
            v.id, v.parentId, v.fileType, v.fileName, v.userInfoId, v.realFileId, v.createTime,
            u.userName, u.password, u.diskSize, u.usedDiskSize,
            r.signKey, r.sourceType, r.filePath, r.fileSize
        from
            virtualFile as v
        left join
            userInfo as u
            on v.userInfoId = u.id
        left join
            realFile as r
            on v.realFileId = r.id
        where
            v.fileName = #{fileName}
            and
            v.parentId = #{parentId}
            and
            v.userInfoId = #{userId}
    </select>

    <select id="queryByRealFileId" resultMap="virtualFileMap">
        select
            v.id, v.parentId, v.fileType, v.fileName, v.userInfoId, v.realFileId, v.createTime,
            u.userName, u.password, u.diskSize, u.usedDiskSize,
            r.signKey, r.sourceType, r.filePath, r.fileSize
        from
            virtualFile as v
        left join
            userInfo as u
            on v.userInfoId = u.id
        left join
            realFile as r
            on v.realFileId = r.id
        where
            v.realFileId = #{realFileId}
    </select>

    <insert id="insert" parameterType="com.stu.yun.model.VirtualFile" keyProperty="id" useGeneratedKeys="true">
        insert into
            virtualFile(id, parentId, fileType, fileName, userInfoId, realFileId, createTime)
        values
            (#{id}, #{parentId}, #{fileType}, #{fileName}, #{userInfoId}, #{realFileId}, #{createTime})
    </insert>

    <delete id="deleteById">
        delete from virtualFile
        where
            id = #{id}
    </delete>

</mapper>